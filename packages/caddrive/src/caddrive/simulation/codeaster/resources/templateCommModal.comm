#Parameters to be adapted:
#gravityScale = 1

DEBUT(LANG='FR')

m_Elem = LIRE_MAILLAGE(identifier='0:1',
                      FORMAT='ASTER',
                      UNITE=20)
                     
IMPR_RESU(FORMAT='MED', UNITE=21, RESU=_F(MAILLAGE=m_Elem))

model = AFFE_MODELE(identifier='3:1',
                    AFFE=_F(MODELISATION=('3D', ),
                            PHENOMENE='MECANIQUE',
                            TOUT='OUI'),
                    MAILLAGE=m_Elem)


mater = DEFI_MATERIAU(identifier='4:1',
                      ELAS=_F(E=2300.0,
                              NU=0.3,
                              RHO = 1.04e-09 * 0.6))    # Factor 0.6 because of hollow body

materfl = AFFE_MATERIAU(identifier='5:1',
                        AFFE=_F(MATER=(mater, ),
                                TOUT='OUI'),
                        MODELE=model)



t_step = DEFI_LIST_REEL(identifier='6:1',
                        DEBUT=0.0,
                        INTERVALLE=_F(JUSQU_A=1.0,
                                      NOMBRE=1))



t_stepa = DEFI_LIST_INST(identifier='7:1',
                         DEFI_LIST=_F(LIST_INST=t_step,
                                      PAS_MINI=0.001,),
                         METHODE='AUTO')



#### ADD kineamtic Boundary conditions here!
#bc_kin = AFFE_CHAR_MECA(identifier='8:1',
#                       DDL_IMPO=_F(DX=0.0,
#                                   DY=0.0,
#                                   DZ=0.0,
#                                   GROUP_MA=('P1_SD', )),
#                       MODELE=model)

##### ADD Load (dynamic boundary conditions) here!
#bc_dyn = AFFE_CHAR_MECA(identifier='9:1',
#                       MODELE=model,
#                       PRES_REP=_F(GROUP_MA=('SURF_P6_FTOP', ),
#                                   PRES=-5.0))

#### ADD LIAISON_DDL (nub connections) here
#lias = AFFE_CHAR_MECA(identifier='11:1',
#                       LIAISON_DDL=_F(COEF_IMPO=0.0,
#                                      COEF_MULT=(-1.0, 1.0),
#                                      DDL=('DZ', 'DZ'),
#                                      GROUP_NO=('B1_PD1', 'P1_PU1')),
#                       MODELE=model)

#### ADD contact conditons here
#contact = DEFI_CONTACT(identifier='12:1',
#                       FORMULATION='DISCRETE',
#                       MODELE=model,
#                       ZONE = (_F( GROUP_MA_ESCL=('P1_SU', ), GROUP_MA_MAIT=('B1_SD', ) ),
#                               _F( GROUP_MA_ESCL=('P1_SU', ), GROUP_MA_MAIT=('B1_SD', ) )
#                              )
#                      )

gravity = AFFE_CHAR_MECA(identifier='13:1',
                         MODELE=model,
                         PESANTEUR=_F(DIRECTION=(0.0, 0.0, -1.0),
                                      GRAVITE=9810.0 * gravityScale))


# Assemble system: Mass matrix and stiffness matrix
ASSEMBLAGE(CHAM_MATER = materfl,
           CHARGE = (bc_kin, lias),
           MATR_ASSE = (_F(MATRICE = CO('stif_mat'),
                           OPTION = 'RIGI_MECA'),
                        _F(MATRICE = CO('mass_mat'),
                           OPTION = 'MASS_MECA')),
           MODELE = model,
           NUME_DDL = CO('num_dof'))

# Compute modes
resnonl = CALC_MODES(CALC_FREQ = _F(FREQ = (-3.0, 1000.0)),
                    MATR_MASS = mass_mat,
                    MATR_RIGI = stif_mat,
                    OPTION = 'BANDE')


# Write results
IMPR_RESU(FORMAT = 'MED',
          RESU = _F(RESULTAT = resnonl),
          UNITE = 3
		  )
          
IMPR_RESU(FORMAT = 'RESULTAT',
          RESU = _F(RESULTAT = resnonl,
                    TOUT_PARA = 'OUI',
                    TOUT_CHAM = 'NON'),
          UNITE = 8)

FIN()
